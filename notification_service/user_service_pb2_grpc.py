# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from notification_service import user_service_pb2 as user__service__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStudentsByIds = channel.unary_unary(
                '/user_service.UserService/GetStudentsByIds',
                request_serializer=user__service__pb2.GetStudentsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetStudentsResponse.FromString,
                _registered_method=True)
        self.GetTeacherByUserId = channel.unary_unary(
                '/user_service.UserService/GetTeacherByUserId',
                request_serializer=user__service__pb2.GetTeacherRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetTeacherResponse.FromString,
                _registered_method=True)
        self.GetStudentByUserId = channel.unary_unary(
                '/user_service.UserService/GetStudentByUserId',
                request_serializer=user__service__pb2.GetStudentByUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetStudentByUserResponse.FromString,
                _registered_method=True)
        self.GetStudentsByGradeYear = channel.unary_unary(
                '/user_service.UserService/GetStudentsByGradeYear',
                request_serializer=user__service__pb2.GetStudentsByGradeYearRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetStudentsByGradeYearResponse.FromString,
                _registered_method=True)
        self.GetStudentById = channel.unary_unary(
                '/user_service.UserService/GetStudentById',
                request_serializer=user__service__pb2.GetStudentByIdRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetStudentByIdResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStudentsByIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTeacherByUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentByUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentsByGradeYear(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStudentsByIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentsByIds,
                    request_deserializer=user__service__pb2.GetStudentsRequest.FromString,
                    response_serializer=user__service__pb2.GetStudentsResponse.SerializeToString,
            ),
            'GetTeacherByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTeacherByUserId,
                    request_deserializer=user__service__pb2.GetTeacherRequest.FromString,
                    response_serializer=user__service__pb2.GetTeacherResponse.SerializeToString,
            ),
            'GetStudentByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentByUserId,
                    request_deserializer=user__service__pb2.GetStudentByUserRequest.FromString,
                    response_serializer=user__service__pb2.GetStudentByUserResponse.SerializeToString,
            ),
            'GetStudentsByGradeYear': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentsByGradeYear,
                    request_deserializer=user__service__pb2.GetStudentsByGradeYearRequest.FromString,
                    response_serializer=user__service__pb2.GetStudentsByGradeYearResponse.SerializeToString,
            ),
            'GetStudentById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentById,
                    request_deserializer=user__service__pb2.GetStudentByIdRequest.FromString,
                    response_serializer=user__service__pb2.GetStudentByIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_service.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('user_service.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStudentsByIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetStudentsByIds',
            user__service__pb2.GetStudentsRequest.SerializeToString,
            user__service__pb2.GetStudentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTeacherByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetTeacherByUserId',
            user__service__pb2.GetTeacherRequest.SerializeToString,
            user__service__pb2.GetTeacherResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStudentByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetStudentByUserId',
            user__service__pb2.GetStudentByUserRequest.SerializeToString,
            user__service__pb2.GetStudentByUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStudentsByGradeYear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetStudentsByGradeYear',
            user__service__pb2.GetStudentsByGradeYearRequest.SerializeToString,
            user__service__pb2.GetStudentsByGradeYearResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetStudentById',
            user__service__pb2.GetStudentByIdRequest.SerializeToString,
            user__service__pb2.GetStudentByIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
